pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM',
                branches: [[name: '*/main']],
                userRemoteConfigs: [[url: 'https://github.com/chaituvarma142/cicd-pipeline.git']]])
            }
        }

        stage('Build and Deploy Pipeline') {
            agent {
                docker {
                    image 'abhishekf5/maven-abhishek-docker-agent:v1'
                    args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
                }
            }
            stages {
                stage('Build and Test') {
                    steps {
                        sh 'ls -ltr'
                        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
                    }
                }

stage('Update Deployment File') {
    environment {
        GIT_REPO_NAME = "deployment_files_manifest"
        GIT_USER_NAME = "chaituvarma142"
    }
    steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
            sh '''
                git config user.email "chaitanyavarma142@gmail.com"
                git config user.name "chaituvarma142"
                
                git fetch origin main
                git checkout main
                git reset --hard origin/main
                
                BUILD_NUMBER=${BUILD_NUMBER}
                sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                
                git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
                
                git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main || (git pull --rebase origin main && git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main)
            '''
        }
    }
}
            }
        }
    }
}
