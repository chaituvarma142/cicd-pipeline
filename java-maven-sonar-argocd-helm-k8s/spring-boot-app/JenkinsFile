pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM',
                branches: [[name: '*/main']],
                userRemoteConfigs: [[url: 'https://github.com/chaituvarma142/cicd-pipeline.git']]])
            }
        }

        stage('Build and Deploy Pipeline') {
            agent {
                docker {
                    image 'abhishekf5/maven-abhishek-docker-agent:v1'
                    args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
                }
            }
            stages {
                stage('Build and Test') {
                    steps {
                        sh 'ls -ltr'
                        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
                    }
                }

                stage('Build and Push Docker Image') {
                    environment {
                        DOCKER_IMAGE = "docker.io/995290/ultimate-cicd:${BUILD_NUMBER}"
                    }
                    steps {
                        withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_CREDENTIALS_USR', passwordVariable: 'DOCKER_CREDENTIALS_PSW')]) {
                            sh '''
                                cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                                docker build -t ${DOCKER_IMAGE} .
                                echo $DOCKER_CREDENTIALS_PSW | docker login -u $DOCKER_CREDENTIALS_USR --password-stdin
                                docker push ${DOCKER_IMAGE}
                            '''
                        }
                    }
                }

                stage('Update Deployment File') {
                    environment {
                        GIT_REPO_NAME = "deployment_files_manifest"
                        GIT_USER_NAME = "chaituvarma142"
                    }
                    steps {
                        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                                 sh '''   
                                           # fix for error
                                            git pull origin main
                                         # Ensure we are on the main branch
                                         git checkout main
                                        
                
                                         # Reset and clean the workspace
                                         git reset --hard
                                         git clean -fd
                
                                          # Update the deployment file with the new image tag
                                          BUILD_NUMBER=${BUILD_NUMBER}
                                          sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                
                                       # Stage and commit the changes
										git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                                         git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit."
                
                # Push changes to the main branch
                git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:refs/heads/main
            
                    '''
                        }
                    }
                }
            }
        }
    }
}
